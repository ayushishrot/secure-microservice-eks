apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.name" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge | default "25%" }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable | default "25%" }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default "default-serviceaccount" }}
      nodeSelector:
        nodegroup: {{ .Values.nodeSelector.nodegroup }}
      affinity:
        podAntiAffinity:
          {{- toYaml .Values.podAntiAffinity | nindent 10 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      containers:
        - name: {{ include "chart.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MONGODB_URI

            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV | quote }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          volumeMounts:
            - name: persistent-storage
              mountPath: {{ .Values.volume.mountPath | default "/app/static" }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path | default "/health" }}
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds | default 10 }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path | default "/health" }}
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds | default 10 }}
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.volume.claimName | default "web-app-pvc" }}

